#!/bin/bash

# üöÄ SCRIPT COMPLETO - ENVIO PARA GITHUB
# Execute este script no seu ambiente local

echo "üöÄ PROJETO MENTAL SA√öDE - ENVIO PARA GITHUB"
echo "=========================================="
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para verificar se comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Verificar se estamos no branch correto
echo -e "${BLUE}üìã Configurando branch principal...${NC}"
git branch -M main

# Verificar se GitHub CLI est√° instalado
if command_exists gh; then
    echo -e "${GREEN}‚úÖ GitHub CLI encontrado!${NC}"
    echo ""
    echo -e "${YELLOW}ü§î Como voc√™ quer criar o reposit√≥rio?${NC}"
    echo "1) Criar reposit√≥rio P√öBLICO com GitHub CLI"
    echo "2) Criar reposit√≥rio PRIVADO com GitHub CLI"
    echo "3) Configurar manualmente (j√° criado no GitHub)"
    echo ""
    read -p "Escolha uma op√ß√£o (1-3): " choice
    
    case $choice in
        1)
            echo -e "${BLUE}üì§ Criando reposit√≥rio p√∫blico...${NC}"
            gh repo create mental-saude --public --source=. --remote=origin --push
            ;;
        2)
            echo -e "${BLUE}üì§ Criando reposit√≥rio privado...${NC}"
            gh repo create mental-saude --private --source=. --remote=origin --push
            ;;
        3)
            echo -e "${BLUE}‚öôÔ∏è Configurando manualmente...${NC}"
            echo "Por favor, crie o reposit√≥rio manualmente em: https://github.com/new"
            echo ""
            read -p "Digite a URL do seu reposit√≥rio: " repo_url
            git remote add origin $repo_url
            git push -u origin main
            ;;
        *)
            echo -e "${RED}‚ùå Op√ß√£o inv√°lida${NC}"
            exit 1
            ;;
    esac
else
    echo -e "${YELLOW}‚ö†Ô∏è GitHub CLI n√£o encontrado${NC}"
    echo ""
    echo -e "${BLUE}üìã Op√ß√µes dispon√≠veis:${NC}"
    echo "1) Criar reposit√≥rio manualmente"
    echo "2) Tentar nomes alternativos"
    echo ""
    read -p "Escolha uma op√ß√£o (1-2): " choice
    
    case $choice in
        1)
            echo -e "${BLUE}üìã Instru√ß√µes para cria√ß√£o manual:${NC}"
            echo "1. Acesse: https://github.com/new"
            echo "2. Nome do reposit√≥rio: mental-saude"
            echo "3. Descri√ß√£o: Sistema completo de sa√∫de mental"
            echo "4. Escolha p√∫blico ou privado"
            echo "5. N√ÉO inicialize com README"
            echo "6. Clique em 'Create repository'"
            echo ""
            read -p "Digite a URL do reposit√≥rio criado: " repo_url
            git remote add origin $repo_url
            ;;
        2)
            echo -e "${BLUE}üîÑ Tentando nomes alternativos...${NC}"
            names=("mental-saude" "mental-health-app" "mental-saude-platform" "mental-health-platform" "saude-mental-app")
            
            for name in "${names[@]}"; do
                echo -e "${YELLOW}üîç Testando: https://github.com/sidneysantossp/$name${NC}"
                if curl -s -o /dev/null -w "%{http_code}" "https://github.com/sidneysantossp/$name" | grep -q "200\|404"; then
                    if curl -s -o /dev/null -w "%{http_code}" "https://github.com/sidneysantossp/$name" | grep -q "200"; then
                        echo -e "${RED}‚ùå J√° existe: $name${NC}"
                        continue
                    else
                        echo -e "${GREEN}‚úÖ Dispon√≠vel: $name${NC}"
                        read -p "Usar este nome? (s/n): " use_name
                        if [[ $use_name =~ ^[Ss]$ ]]; then
                            git remote add origin "https://github.com/sidneysantossp/$name.git"
                            echo -e "${BLUE}üì§ Configurado com: $name${NC}"
                            break
                        fi
                    fi
                fi
            done
            ;;
        *)
            echo -e "${RED}‚ùå Op√ß√£o inv√°lida${NC}"
            exit 1
            ;;
    esac
    
    # Tentar enviar
    echo -e "${BLUE}üì§ Enviando para GitHub...${NC}"
    git push -u origin main
fi

# Verificar se o envio foi bem-sucedido
if [ $? -eq 0 ]; then
    echo ""
    echo -e "${GREEN}üéâ SUCESSO! Projeto enviado para GitHub!${NC}"
    echo ""
    echo -e "${BLUE}üîê Credenciais de Acesso:${NC}"
    echo "   Email: sid.websp@gmail.com"
    echo "   Senha: Admin@2024!"
    echo ""
    echo -e "${BLUE}üöÄ Pr√≥ximos passos:${NC}"
    echo "   1. Configure o deploy na Vercel"
    echo "   2. Conecte o reposit√≥rio do GitHub"
    echo "   3. Configure as vari√°veis de ambiente"
    echo "   4. Fa√ßa o deploy!"
else
    echo ""
    echo -e "${RED}‚ùå Falha no envio${NC}"
    echo -e "${YELLOW}üîß Verifique:${NC}"
    echo "   - Suas credenciais do GitHub"
    echo "   - Se o reposit√≥rio existe"
    echo "   - Sua conex√£o com a internet"
fi